def main = fn(() => int(
  ; add some unused variables to ensure these do not interfere with closure generation
  def unused-local = int(0)
  def unused-local2 = int(2)

  def exp-tail = fn((base : int, exponent : int) => int(
    def exp-tail-impl = fn((exponent : int, acc : int) => int(
      if exponent == 0 =>
        acc
      else =>
        exp-tail-impl(exponent - 1, acc * base)
    ))
    
    exp-tail-impl(exponent, 1)
  ))

  printf("%ld\n", exp-tail(2, 5))

  0
))
